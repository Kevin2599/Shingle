matrix:
  include:

  # Build Environment #1
  #
  # macOS 10.13 High Sierra pip base packages build
  #
  - env:
      - NAME=high_sierra-10.13-pip
    os: osx
    language: generic
    before_install:
      # See pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>.
      # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
      # virtualenv needs pyenv knowledge.
      # For pip: pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>.
      - brew update
      - brew install openssl readline
      - brew outdated pyenv || brew upgrade pyenv
      - brew install pyenv-virtualenv
      - pyenv install 2.7.15
      - export PYENV_VERSION=2.7.15
      - export PATH="/Users/travis/.pyenv/shims:${PATH}"
      - pyenv virtualenv venv
    install:
      - python -m pip install -U pip
      - pip install numpy==1.13.3
      - pip install matplotlib pyproj shapely Pillow pytest requests
      - pip install Pydap==3.2.1
      - rm -f '/usr/local/include/c++'
      - brew install gmsh
      - brew link --overwrite gcc
      - brew install netcdf
      - pip install ScientificPython
    before_script:
      - export LD_LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LD_LIBRARY_PATH"
      - export LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LIBRARY_PATH"
    script:
      - make
      - make unittest
      # Pre-download, to best work with Travis timeout
      - make pre_download_large_datasets
      - make test

  
  # Build Environment #2
  #
  # Ubuntu Xenial 16.04 Docker container build and test
  #
  - env:
      - NAME=bionic-18.04-docker
    services:
      - docker
    dist: xenial
    language: cpp
    install:
      - docker build -f Dockerfile_bionic -t shingle .
    script:
      - docker run -a stdout -t shingle make unittest
      # Pre-download, to best work with Travis timeout
      - docker run -a stdout -t shingle make pre_download_large_datasets
      - docker run -v $PWD:/run -w="/run" -a stdout -t shingle shingle -t


  # Build Environment #3
  #
  # Ubuntu Xenial 16.04 Docker container build and test
  #
  - env:
      - NAME=xenial-16.04-docker
    services:
      - docker
    dist: xenial
    language: cpp
    install:
      - docker build -f Dockerfile_xenial -t shingle .
    script:
      - docker run -a stdout -t shingle make unittest
      # Pre-download, to best work with Travis timeout
      - docker run -a stdout -t shingle make pre_download_large_datasets
      - docker run -v $PWD:/run -w="/run" -a stdout -t shingle shingle -t


  # Build Environment #4
  #
  # Ubuntu Trusty 14.04 Docker container build and test
  #
  - env:
      - NAME=trusty-14.04-docker
    services:
      - docker
    dist: xenial
    language: cpp
    install:
      - docker build -f Dockerfile_trusty -t shingle .
    script:
      - docker run -a stdout -t shingle make unittest
      # Pre-download, to best work with Travis timeout
      - docker run -a stdout -t shingle make pre_download_large_datasets
      - docker run -v $PWD:/run -w="/run" -a stdout -t shingle shingle -t


  # Build Environment #5
  #
  # Ubuntu Trusty 14.04 Trusty apt base packages build and test
  #
  - env:
      - NAME=trusty-14.04-apt
    dist: trusty
    language: python
    python: 2.7
    sudo: required
    compiler: gcc
    addons:
      apt:
        packages:
          - build-essential
          - python-setuptools
          - python-dev
          - python-pip
          - python-scipy
          - python-numpy
          - python-netcdf
          - python-scientific
          - python-matplotlib 
          - python-shapely
          - python-pyproj
          - python-pil
          - gmsh
          - python-pytest
          - curl
    virtualenv:
      system_site_packages: true
    install:
      - sudo apt-get update
      - sudo apt-get install -y git gcc g++ build-essential python-setuptools python-dev python-pip python-scipy python-numpy python-netcdf python-scientific python-matplotlib python-shapely python-pyproj python-pil gmsh python-pytest
      - pip install -U pip setuptools
      - pip install Pydap==3.2.1
      - pip install Shapely==1.5.9
    before_script:
      - export LD_LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LD_LIBRARY_PATH"
      - export LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LIBRARY_PATH"
      - export LD_LIBRARY_PATH="/usr/lib/python2.7/dist-packages/Scientific/:$LD_LIBRARY_PATH"
      - export LIBRARY_PATH="/usr/lib/python2.7/dist-packages/Scientific/:$LIBRARY_PATH"
      - export PYTHONPATH="/usr/lib/python2.7/dist-packages/Scientific/:$PYTHONPATH"
    script:
      - make
      - make unittest
      # Pre-download, to best work with Travis timeout
      - make pre_download_large_datasets
      - make test


  # Build Environment #6
  #
  # Ubuntu Precise 12.04 Trusty apt base packages build and test
  #
  - env:
      - NAME=precise-12.04-apt
    dist: precise
    language: python
    python: 2.7
    sudo: required
    compiler: gcc
    addons:
      apt:
        packages:
          - build-essential
          - python-setuptools
          - python-dev
          - python-pip
          - python-scipy
          - python-numpy
          - python-scientific
          - python-matplotlib 
          - python-shapely
          - python-pyproj
          - python-imaging
          - python-requests
          - gmsh
          - python-py
          - curl
    virtualenv:
      system_site_packages: true
    install:
      - sudo apt-get update
      - sudo apt-get install -y git gcc g++ build-essential python-setuptools python-dev python-pip python-scipy python-numpy python-scientific python-matplotlib python-shapely python-pyproj python-imaging gmsh python-py
      - pip install -U pip setuptools
      - pip install Pydap==3.2.1
      - pip install Shapely==1.5.9
    before_script:
      - export LD_LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LD_LIBRARY_PATH"
      - export LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LIBRARY_PATH"
    script:
      - make
      - make unittest
      # Pre-download, to best work with Travis timeout
      - make pre_download_large_datasets
      - make test


  # Build Environment #7
  #
  # Ubuntu Trusty 14.04 Trusty pip base packages build and test
  #
  - env:
      - NAME=trusty-14.04-pip
    dist: trusty
    language: python
    python: 2.7
    sudo: required
    compiler: gcc
    addons:
      apt:
        packages:
          # Temporarily install apt Scientific
          - python-netcdf
          - python-scientific
          - gmsh
          - curl
    virtualenv:
      system_site_packages: true
    install:
      - pip install numpy matplotlib pyproj shapely Pillow pytest
      - pip install Pydap==3.2.1
      #- pip install ScientificPython
    before_script:
      - export LD_LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LD_LIBRARY_PATH"
      - export LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LIBRARY_PATH"
    script:
      - make
      - make unittest
      # Pre-download, to best work with Travis timeout
      - make pre_download_large_datasets
      - make test


  # Build Environment #8
  #
  # Ubuntu Precise 12.04 Trusty pip base packages build and test
  #
  - env:
      - NAME=precise-12.04-pip
    dist: precise
    language: python
    python: 2.7
    sudo: required
    compiler: gcc
    addons:
      apt:
        packages:
          # Temporarily install apt Scientific
          - python-netcdf
          - python-scientific
          - gmsh
          - curl
    virtualenv:
      system_site_packages: true
    install:
      - pip install numpy matplotlib pyproj shapely Pillow pytest
      - pip install Pydap==3.2.1
      - pip install requests
      #- pip install ScientificPython
    before_script:
      - export LD_LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LD_LIBRARY_PATH"
      - export LIBRARY_PATH="$HOME/build/shingleproject/Shingle/lib/:$LIBRARY_PATH"
    script:
      - make
      - make unittest
      # Pre-download, to best work with Travis timeout
      - make pre_download_large_datasets
      - make test


notifications:
  slack:
    secure: RRdmxLqjwm5LVcHmeoLs+WAB8FhYEMb+riZMvAoVxt4/7FuSIvyil/oeL8KI7P7g/EPnN8hQlf7duyGwAaih/gWKd47vDnmhir7VbO6fe3zBVvX9TVa/kuqejGSnJlOPw6dFDMLoCqnJ08dwUWzvvAmCHr7wod16PfI557pqvAE=

