include "spud_base.rnc"

include "mesh_options.rnc"

start =
   (
      ## The root node of the options dictionary.
      element shingle_options {
         comment,
         ## Model output files are named according to the initialisation
         ## name, e.g. [initialisation_name].geo.
         ##
         ## Non-standard characters in the simulation name should be avoided.
         element initialisation_name {
            anystring
         },
         ## Option domain_type does not change the tree.
         ##
         ## It is used for options checking.
         element domain_type {
            element string_value {
               # Lines is a hint to the gui about the size of the text box.
               # It is not an enforced limit on string length.
               attribute lines { "1" },
               ( "oceans" | "ocean_ice_shelf" | "geophysical" | "surface_geoid" | "stokes" )
            },
            comment
         },
         general,
         datasets*,
         surface_geoid_representation+,
         metric_options,
         mesh_options,
         verification_tests
      }
   )      

datasets =
  (
    ## Boundary representation component
    element dataset {
      attribute name { string },
      (
      dataset_source
      |dataset_shapefile
      |dataset_gis_project
      ),
      (
        ## Projection of input data source:
        ## Automatic, read from source
        ## (as much as possible)
        element projection {
          attribute name { "Automatic" },
          comment
        }|
        ## Projection of input data source:
        ## Cartesian
        element projection {
          attribute name { "Cartesian" },
          comment
        }|
        ## Projection of input data source:
        ## Stereographic
        ##
        ## Needs pole orientation?
        element projection {
          attribute name { "Stereographic" },
          comment
        }|
        ## Projection of input data source:
        ## Proj4 string
        element projection {
          attribute name { "Proj4_string" },
          string,
          comment
        }
      )
    }
  )

dataset_gis_project =
  (
    ## Boundary representation component source
    element source {
      attribute name { "GIS_project" },
      comment,
      dataset_gis_options
    }
  )

dataset_shapefile =
  (
    ## Boundary representation component source
    element source {
      attribute name { "shapefile" },
      comment,
      dataset_shapefile_options
    }
  )

dataset_source =
  (
    ## Boundary representation component source
    element source {
      attribute name { "raster" },
      comment,
      dataset_source_options
    }
  )

dataset_shapefile_options =
  (
    ## Source shapefile
    ## (change to define a folder within project for location?)
    element source {
      attribute file_name { string },
      comment
    }
  )

dataset_gis_options =
  (
    ## Source GIS project
    ## (change to define a folder within project for location?)
    element source {
      attribute file_name { string },
      comment
    }
  )

dataset_source_options =
  (
    (
      ## Source raster dataset
      ## (change to define a folder within project for location?)
      ##
      ## Default: ~/tmp/dataset/rtopo/RTopo105b_50S.nc
      element source {
        attribute file_name { string },
        comment
      }|
      ## Source raster dataset
      ##
      ## See: http://www.opendap.org
      ##
      ## See: http://opendap.deltares.nl
      ##
      ## See: http://www.esrl.noaa.gov/psd/data/gridded/using_dods.html
      element source {
        attribute name { "OPeNDAP" },
        string, 
        comment
      }
    )
  )






general =
  (
    ## Global default paramters
    element global_parameters
    {
      ## The default radius of the planet
      ## for the purpose of a common parameter
      ## in projections.
      ##
      ## Default: 6.37101e+06m
      ##
      ## Unit: metres
      element planet_radius {
        real,
        comment
      }?,
      ## The default spacing between nodes in connecting
      ## paths that are drawn out as required.
      ##
      ## Distance of steps when drawing parallels and meridians (currently in degrees - need to project)
      ##
      ## Default: 0.1
      ##
      ## Legacy parameter: dx_default
      element spacing_default {
        real,
        comment
      }?,
      ## Include this option to make individual definitions for
      ## boundary identifications, instead of as a whole.
      ##
      ## Including this option ensures the output does not contain
      ## extra spurious 1d elements in tests.
      ## It does however generate complaints (rightly so) of multiple
      ## physical line definitions.
      ## This option is provided as a pragmatic solution to what appears
      ## unintended behaviour of the meshing algorithm.
      ## Alternatively the output mesh can be parsed of the spurious
      ## elements using the post-processing option: parse_spurious_elements
      ##
      ## Default: False
      element physical_lines_separate {
        comment
      }?
    }
  )

surface_geoid_representation_output = 
  (
    ## Output options
    ##
    ## Default file_name: ./shorelines.geo
    element output {
      attribute file_name { string },
      comment,
      ##Â Output Projection type
      ##
      ## Default: cartesian
      ##
      ## Legacy: projection
      element projection {
        element string_value {
          "cartesian" | "proj_cartesian" | "proj_cartesian_inverse" | "hammer" | "longlat"
        },
        comment
      }?
    }
  )

surface_geoid_representation =
  (
    ## A description of a surface geoid object
    ## for computational representation
    element surface_geoid_representation {
      ## An supplement suffix for the IDs in the output
      ## boundary representation description.
      ## This is useful if multiple distinct surfaces exist
      ## in the project.
      ##
      ## Default: ''
      attribute name { string },
      element id_suffix {
        comment
      }?,
      ## Break up BSpline defintions are turning points to impose
      ## geometric constraint at these point in the mesh generation process.
      ##
      ## Default: False
      element more_bsplines {
        comment
      }?,
      surface_geoid_representation_output,
      surface_geoid_representation_brep+,
      surface_geoid_representation_closure?,
      internal_regions?
    }
  )

internal_regions =
  (
    ## Define interal regions
    ##
    ## e.g. vegetation in lagoons,
    ## areas of variable manning coefficient
    ##
    ## To be sorted...
    element internal_regions {
      element internal_region {
        attribute name { string },
        comment
      }*
    }
  )

surface_geoid_representation_brep =
  (
    ## Boundary representation component
    element brep_component {
      attribute name { string },
      (
      surface_geoid_representation_named
      |surface_geoid_representation_source
      |surface_geoid_representation_shapefile
      ),

      (
        ## Representation type for the component brep
        ##
        ## Default: BSplines
        ##
        ## Legacy: compound
        element representation_type {
          attribute name { "BSplines" },
          comment
        }|

        element representation_type {
          attribute name { "CompoundBSplines" },
          comment
        }

      ),

      ## Node spacing
      ##
      ## Distance of steps when drawing parallels and meridians (currently in degrees - need to project)
      ##
      ## Default: Revert to global spacing above
      ##
      ## Legacy: dx
      element spacing {
        real,
        comment
      }?,

      ## Link to other brep components
      ##
      ## Default behaviour is automatic
      element links {
        ## Start of brep is linked to brep_component named
        element start {
          attribute name { string },
          ## Default behavior is to match the start of this brep
          ## to the *end* of the named brep.
          ## Enable this to match start to start
          element reverse {
            comment
          }?
        }?,
        element end {
          attribute name { string },
          ## Default behavior is to match the end of this brep
          ## to the *start* of the named brep.
          ## Enable this to match end to end
          element reverse {
            comment
          }?
        }?,
        comment
      }?

    }
  )

surface_geoid_representation_named =
  (
    ## Boundary representation component source
    element source {
      attribute name { string },
      comment
    }
  )

surface_geoid_representation_shapefile =
  (
    ## Boundary representation component source
    element source {
      attribute name { "shapefile" },
      comment,
      surface_geoid_representation_shapefile_options
    }
  )

surface_geoid_representation_source =
  (
    ## Boundary representation component source
    element source {
      attribute name { "raster" },
      comment,
      surface_geoid_representation_source_options
    }
  )

surface_geoid_representation_shapefile_options =
  (
    ## Source shapefile
    ## (change to define a folder within project for location?)
    element source {
      attribute file_name { string },
      comment
    }
  )

surface_geoid_representation_source_options =
  (
    (
      ## Source raster dataset
      ## (change to define a folder within project for location?)
      ##
      ## Default: ~/tmp/dataset/rtopo/RTopo105b_50S.nc
      element source {
        attribute file_name { string },
        comment
      }|
      ## Source raster dataset
      ##
      ## See: http://www.opendap.org
      ##
      ## See: http://opendap.deltares.nl
      ##
      ## See: http://www.esrl.noaa.gov/psd/data/gridded/using_dods.html
      element source {
        attribute name { "OPeNDAP" },
        string, 
        comment
      }
    ),
    ## Region specification - multiple?
    ## Function specifying region of interest
    ##
    ## e.g. 'latitude <= -60.0'
    ##
    ## Default: 'True' (string)
    ##
    ## Legacy: 
    ## region
    element region {
      string, 
      comment
    }?,
    ## Box 
    ## Boxes with regions of interest
    ##
    ## e.g. -85.0:-20.0,-89.0:-75.0 -64.0:-30.0,-89.0:-70.0 -30.0:-20.0,-89.0:-75.0
    ##
    ## Default: []
    ##
    ## Legacy: box
    element box {
      string, 
      comment
    }?,
    ## Minimum area of islands / holes in geoid surface
    ##
    ## Default: 0
    ##
    ## Legacy: minarea
    element minimum_area {
      real,
      comment
    }?,

    # Define alternative here - breaking up the following

    ## Contour type
    ##
    ## Default: iceshelfcavity
    ##
    ## Legacy: contourtype
    element contourtype {
      element string_value {
         "iceshelfcavity" | "icesheet" | "z" | "ocean10m" | "zmask" | "xyz" | "noshelf" | "gsds" | "mask" | "gsdsz" | "gebco" | "gsdszc"
      },
      comment
    }?,
    ## Include iceshelf ocean cavities
    ##
    ## Includes iceshelf ocean cavities from mesh (default behaviour includes region)
    ##
    ## Default: True
    ##
    ## Legacy: include_iceshelf_ocean_cavities
    element include_iceshelf_ocean_cavities {
      comment
    }?,
    ## Boundaries
    ## Use a list of integers instead?
    ## Specify paths to include
    ##
    ## Default: []
    ##
    ## Legacy: boundaries
    element boundary {
      integer,
      comment
    }?,
    ## Boundaries to exclude
    ## Use a list of integers instead?
    ## Specify paths to exclude
    ##
    ## Default: []
    ##
    ## Legacy: boundariestoexclude
    element boundary_to_exclude {
      integer,
      comment
    }?

  )


surface_geoid_representation_closure =
  (
      ## Methods to close the geoid surface domain.
      element closure {
        ## Do not include open boundaries
        ##
        ## Default: False
        ##
        ## Legacy: open (default true)
        element no_open {
          comment
        }?,
        ## Bounding latitude.
        ## Latitude of boundary to close the domain.
        ##
        ## Default: -50.0
        ##
        ## Legacy: bounding_lat
        element bounding_latitude {
          real,
          comment
        }?,
        ## Extend to latitude.
        ##
        ## Latitude to extend open domain to.
        ##
        ## Default: None
        ##
        ## Legacy: extendtolatitude
        element extend_to_latitude {
          real,
          comment
        }?,
        ## Close with parallels 
        ##
        ## Default: False 
        ##
        ## Legacy: closewithparallels
        element close_with_parallels {
          comment
        }?
      }
  )



#      ## Processing - smoothing
#      ## Have separate rasters section?  - sources?
#      ##
#      ## Default: False
#      ##
#      ## Legacy: smooth_data
#      element smooth_data {
#        comment,
#        ## Intensity of smoothing
#        ##
#        ## Default: 100
#        ##
#        ## Legacy: smooth_degree
#        element magnitude {
#          real,
#          comment
#        }
#      }







metric_options = 
  (
    ## Metric generation options
    element metric_options {
      ## Generate metric alongside the creation of the boundary representation
      ## to guide element size over the spatial surface geoid
      ##
      ## Default: False
      element generate_metric {
        comment
      }?,
      ## Element length
      ##
      ## Default: 1.0E5
      ##
      ## Legacy: elementlength
      element element_length {
        real,
        comment
      }?
    }?
  )

mesh_options = 
  (
    ## Mesh generation options
    element mesh_options {
      ## Generate mesh following creation of the boundary representation
      ##
      ## Default: False
      element generate_mesh {
        comment
      }?
    }?
  )






















     
metric =
  (
     element metric {
        ## Metric definition
        element name {
          attribute name { "Metric name" },
          element name {
            anystring
          }
        }
     }
  )

mesh =
  (
     element mesh {
        ## Mesh definition
        element name {
          attribute name { "Mesh name" },
          element name {
            anystring
          }
        }
     }
  )


















## NetCDF CF 1.4 (http://cf-pcmdi.llnl.gov/)

raster_input_format =
  (
      ## raster input file format.
      element format {
         attribute name { "Raster" },
         ## The field to read from the vtu file. If not supplied, the name of
         ## the initialised field is used.
         element field_name {
            anystring,
            comment
         }?,
         comment
      }
  )


test_integer =
  (
    ## Value
    element value {
      integer,
      comment,
      ## Tolerance
      element tolerance {
        integer,
        comment
      }?
    }|
    ## Range
    element range {
      ## Minimum
      element minimum {
        integer,
        comment
      }?,
      ## Maximum
      element maximum {
        integer,
        comment
      }?,
      comment
    }
  )

test_real =
  (
    ## Value
    element value {
      real,
      comment,
      ## Tolerance
      element tolerance {
        real,
        comment
      }?
    }|
    ## Range
    ##
    ## Note one can use this option to specify a lower or upper 
    ## bound, as well as specifying a complete range.
    element range {
      ## Minimum
      element minimum {
        real,
        comment
      },
      ## Maximum
      element maximum {
        real,
        comment
      },
      comment
    }
  )



verification_tests_old =
  (
    ## Verification test structure.
    ##
    ## Parameters containing expected values for the
    ## surface geoid boundary representation
    ## provided above.
    element verification {
      ## Node number
      element node_number {
        test_integer,
        comment
      }?,
      ## Element number
      element element_number {
        test_integer,
        comment
      }?,
      ## Edge node number
      element edge_node_number {
        test_integer,
        comment
      }?,
      ## Surface Geoid Area
      element surface_geoid_area {
        test_real,
        comment
      }?,
      ## Element circumsphere range
      element element_circumsphere {
        test_real,
        comment
      }?
    }?
  )


verification_tests =
  (
    ## Verification test structure
    element verification {
      (
        ## Node number
        element test {
          attribute name { "node_number" },
          test_integer,
          comment
        }|
        ## Element number
        element test {
          attribute name { "element_number" },
          test_integer,
          comment
        }|
        ## Edge node number
        element test {
          attribute name { "edge_node_number" },
          test_integer,
          comment
        }|
        ## Surface Geoid Area
        element test {
          attribute name { "surface_geoid_area" },
          test_real,
          comment
        }|
        ## Element circumsphere range
        element test {
          attribute name { "element_circumsphere" },
          test_real,
          comment
        }|
        ## Compare the raw content of the description
        ## of the boundary representation
        # Improve with tolerance on positions?
        element brep_description {
          attribute name { "brep_description" },
          attribute file_name { string },
          comment
        }
      )+
    }?
  )

# raw geo diff?
# geo diff with tolerance on positions?



geometry = 
   (
      ## Options dealing with the specification of geometry
      element geometry {
         ## Dimension of the problem.
         ## <b>This can only be set once</b>
         element dimension {
            element integer_value {
               attribute rank {"0"},
               ("3"|"2"|"1")
            }
         },
         ## The position mesh
         element mesh {
            attribute name { "CoordinateMesh" },
            mesh_info
         },
         ## The velocity mesh
         element mesh {
            attribute name { "VelocityMesh" },
            mesh_info
         }?,
         ## The pressure mesh
         element mesh {
            attribute name { "PressureMesh" },
            mesh_info
         }?,
         element mesh {
            attribute name { string },
            mesh_info,
            element exclude_from_mesh_adaptivity{empty}?
         }*,
         ## Quadrature
         element quadrature {
            ## Quadrature degree
            ## 
            ## note: this specifies the degree of quadrature,
            ## not the number of gauss points
            element degree {
               integer
            },
            ## Surface quadrature degree
            ## 
            ## note: this specifies the degree of surface
            ## quadrature not the number of surface gauss points
            element surface_degree {
               integer
            }?,
            ## Sets the degree of quadrature on each quadrilateral
            ## face of the control volume. 
            ##
            ## Defaults to 1 if
            ## unselected which is the same as pre-new options
            ## behaviour.
            element controlvolume_surface_degree {
               integer
            }?,
            ## Select which family of quadrature rules to use.
            ## The default is family_cools.
            ## family_wandzura allows for degree up to 30
            ## on triangular meshes.
            ## family_grundmann_moeller allows for degree up to
            ## 29 on simplicial meshes in arbitrary dimension.
            element quadrature_family {
               element string_value {
                  ( "family_cools" | "family_grundmann_moeller" | "family_wandzura" ) 
               }
            }?
         },
         ## This causes the change of variables associated with each element in 
         ## the mesh to be stored rather than calculated every time it is used. 
         ## This should speed up computations at a cost of some memory. 
         ## 
         ## The cache is automatically regenerated after mesh movement or 
         ## adaptivity and is automatically disabled for non-linear positions fields.
         element disable_geometric_data_cache {
            empty
         }?,
         ## Options specifying that the problem is on the surface of the sphere.
         element spherical_earth {
            (
               element linear_mapping {
                  empty
               }|
               ## Enabling this option approximates the curvature of the Earth as an
               ## nth degree polynomial, where n is the polynomial degree of the coordinate mesh.
               element superparametric_mapping {
                  empty
               }
            )
         }?,
         ## Options specifying the top surface and bottom of the domain
         ## used in various ocean calculations.
         element ocean_boundaries {
            ## Specify the surface ids that make up the top of the domain,
            ## i.e. the free surface or rigid lid.
            element top_surface_ids {
               integer_vector
            },
            ## Specify the surface ids that make up the bottom.
            element bottom_surface_ids {
               integer_vector
            },
            ## Diagnostic field giving the distance to the top surface.
            element scalar_field {
               attribute rank { "0" },
               attribute name { "DistanceToTop" },
               element diagnostic {
                  internal_algorithm,
                  element mesh {
                     attribute name {  "CoordinateMesh" }
                  },
                  diagnostic_scalar_field
               }
            },
            ## Diagnostic field giving the distance to ocean bottom.
            element scalar_field {
               attribute rank { "0" },
               attribute name { "DistanceToBottom" },
               element diagnostic {
                  internal_algorithm,
                  element mesh {
                     attribute name {  "CoordinateMesh" }
                  },
                  diagnostic_scalar_field
               }
            }
         }?
      }
   )
